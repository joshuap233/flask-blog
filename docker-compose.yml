version: "3"

services:
  webapp:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flask_blog
    restart: always
    depends_on:
      - database
    networks:
      blognetwork:
        ipv4_address: 172.19.0.11
    ports:
      - "8000:8000"
    command: gunicorn -c gunicorn.conf.py --preload app.main:app
    volumes:
      - $HOME/blog_image:/files
      - $HOME/logs:/logs/web/
    environment:
      MYSQL_ROOT_PASSWORD: ""
      SERVER_NAME: "127.0.0.1"
      SECRET_KEY: ""
      JWT_SECRET_KEY: ""
      SENTRY_DSN: ""
      MAIL_PASSWORD: ""
      MAIL_USERNAME: ""
      API_SECURITY_STRING: ""
      MYSQL_ADDRESS: ""
      UPLOAD_FOLDER: ""
      FLASK_ENV: ""
      LOG_DIR: ""
  ngnix:
    restart: always
    build:
      context: .
      dockerfile: nginx/Dockerfile
    container_name: ngnix
    networks:
      blognetwork:
        ipv4_address: 172.19.0.12
    ports:
      - "443:443"
      - "80:80"
    depends_on:
      - webapp
    volumes:
      - /data/certs/:/etc/nginx/certs
      - $HOME/blog_image:/static/images/
  database:
    build:
      context: ./mysql/
      dockerfile: Dockerfile
    container_name: mysql
    volumes:
      - $HOME/mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ""
    ports:
      - "3306:3306"
    networks:
      blognetwork:
        ipv4_address: 172.19.0.10
networks:
  blognetwork:
    ipam:
      config:
        - subnet: 172.19.0.0/16

