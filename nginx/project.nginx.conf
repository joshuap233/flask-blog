server {
  listen 80;
  server_name docker_flask_gunicorn_nginx;
  #server_name 172.19.0.13;
  rewrite ^(.*)$ https://127.0.0.1$1 permanent;
}

server {
  listen 443 ssl;
  #server_name 172.19.0.13;
  # 查看缓存状态与日期
  add_header X-GG-Cache-Status $upstream_cache_status;
  add_header X-GG-Cache-Date $upstream_http_date;

  server_name docker_flask_gunicorn_nginx;
  ssl_certificate /etc/nginx/certs/3848306_shushugo.com.pem;
  ssl_certificate_key /etc/nginx/certs/3848306_shushugo.com.key;
  proxy_cache flask_app;
  # 根据nginx 文档,这个命令需要商业订阅
  #proxy_cache_purge $purge_method;

  location / {
    autoindex_localtime on;
    autoindex off;
    proxy_pass http://flask_blog:8000;
    # try_files $uri /static/fontend/index.html; #brower或者history路由需要设置此项，功能是如果找不到目录文件，index.html文件
    #proxy_set_header    uri              $request_uri; #转发需要的路径参数
    #proxy_set_header    server           172.19.0.11:8000; #转发服务器名
    proxy_set_header    X-Real-IP        $remote_addr;
    # domain:port or docker-container_name(docker-compose):port
    # Do not change this
    proxy_set_header    Host             $host;
    proxy_set_header    X-Forwarded-For  $proxy_add_x_forwarded_for;

    set $prerender 0;
    if ($http_user_agent ~* "googlebot|bingbot|yandex|baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest\/0\.|pinterestbot|slackbot|vkShare|W3C_Validator|whatsapp") {
      set $prerender 1;
    }
    if ($args ~ "_escaped_fragment_") {
      set $prerender 1;
    }
    if ($http_user_agent ~ "Prerender") {
      set $prerender 0;
    }
    if ($uri ~* "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff|svg|eot)") {
      set $prerender 0;
    }

    if ($prerender = 1) {
      proxy_pass http://prerender:8888;
        rewrite .* /$scheme://$host$request_uri? break;
    }
    if ($prerender = 0) {
      proxy_pass http://flask_blog:8000;
    }
  }

  location /admin/static {
    rewrite ^/admin(.*) $1 break;
    root /static/admin/;
  }

  location /static {
    root /static/fontend/;
    break;
  }
  location /images/image {
    if ($request_method = GET) {
      rewrite ^/images(.*) $1 break;
      root /static/images/;
    }
  }
}
