server {
  listen 80;
  #server_name docker_flask_gunicorn_nginx;
  server_name 172.19.0.13;
  rewrite ^(.*)$ https://127.0.0.1$1 permanent;
}

server {
  listen 443 ssl;
  server_name 172.19.0.13;
  #server_name docker_flask_gunicorn_nginx;
  ssl_certificate /etc/nginx/certs/3848306_shushugo.com.pem;
  ssl_certificate_key /etc/nginx/certs/3848306_shushugo.com.key;


  proxy_cache flask_app;
  location / {
    try_files $uri /static/fontend/index.html; #brower或者history路由需要设置此项，功能是如果找不到目录文件，index.html文件
    proxy_set_header    uri              $request_uri; #转发需要的路径参数
    proxy_set_header    server           172.19.0.11:8000; #转发服务器名
    proxy_set_header    X-Real-IP        $remote_addr;
    if ($http_user_agent ~* "qihoobot|Chrome|Baiduspider|Googlebot|Googlebot-Mobile|Googlebot-Image|Mediapartners-Google|Adsbot-Google|Feedfetcher-Google|Yahoo! Slurp|Yahoo! Slurp China|YoudaoBot|Sosospider|Sogou spider|Sogou web spider|MSNBot|ia_archiver|Tomato Bot|FeedDemon|JikeSpider|Indy Library|Alexa Toolbar|AskTbFXTV|AhrefsBot|CrawlDaddy|CoolpadWebkit|Java|Feedly|UniversalFeedParser|ApacheBench|Microsoft URL Control|Swiftbot|ZmEu|oBot|jaunty|Python-urllib|lightDeckReports Bot|YYSpider|DigExt|YisouSpider|HttpClient|MJ12bot|heritrix|EasouSpider|Ezooms|^$")
    {
        #判断如果是网络爬虫，转发到node服务器下
       proxy_pass http://172.19.0.13:8888;
       break;
    }
    # domain:port or docker-container_name(docker-compose):port
    proxy_pass http://flask_blog:8000;
    # Do not change this
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  location /admin/static {
    rewrite ^/admin(.*) $1 break;
    root /static/admin/;
  }

  location /static {
    root /static/fontend/;
    break;
  }
  location /images/image {
    if ($request_method = GET) {
      rewrite ^/images(.*) $1 break;
      root /static/images/;
    }
  }
}
